-- programs ------------------------------------------------

entrypoints Prog ;

Program.   Prog ::= Term ;



-- Atoms -----------------------------------------------------


AVar.      Atom ::= Ident;

ATerm.     Atom  ::= "(" Term ")";


-- Expression ----------------------------------------------
ApplicationAtom.  Application ::= Atom;

AApplication.     Application ::= Application Atom;


-- Term ---------------------------------------------------------------

ApplicationTerm.     Term ::= Application;

LetInTerm.           Term ::= "let" Ident "=" Term "in" Term;

LambdaAbsTerm.       Term ::= "lam" Ident ":" Type "." Term;

TrueTerm.            Term ::= "true";

FalseTerm.           Term ::= "false";

IfTerm.              Term ::= "if" Term "then" Term "else" Term;

SuccTerm.            Term ::= "succ" Term;

ZeroTerm.            Term ::= "zero";

PredTerm.            Term ::= "pred" Term; 

PairTerm.            Term ::= "{" Term "," Term "}";

FstTerm.             Term ::= "first" Term; 

SndTerm.             Term ::= "second" Term;

-- Types ---------------------------------------------------

Arrow.             Type1 ::= Type1 "->" Type2; 

Nat.               Type2 ::= "Nat" ;

Bool.              Type2 ::= "Bool" ;

coercions  Type 2;

-- comments ------------------------------------------------

comment    "#" ;

comment    "//" ;

comment    "/*" "*/" ;

-- Tokens --------------------------------------------------
